import{_ as a,o as e,c as i,Q as l}from"./chunks/framework.39f71bcb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/代码随想录/哈希表.md","filePath":"pages/Earnings/代码随想录/哈希表.md"}'),t={name:"pages/Earnings/代码随想录/哈希表.md"},o=l('<h2 id="哈希结构" tabindex="-1">哈希结构 <a class="header-anchor" href="#哈希结构" aria-label="Permalink to &quot;哈希结构&quot;">​</a></h2><ul><li>哈希函数：把传入的key映射到符号表的索引上</li><li>哈希碰撞：处理多个key映射到相同索引上的场景，处理碰撞的普遍方式是拉链发和线性探测法。</li></ul><ol><li>数组</li><li>set (add,has)</li><li>map</li></ol><h2 id="典型例题" tabindex="-1">典型例题 <a class="header-anchor" href="#典型例题" aria-label="Permalink to &quot;典型例题&quot;">​</a></h2><ol><li><p>三数四数之和：双指针+去重</p></li><li><p>赎金信： 用数组效率更高</p></li><li><p>有效字母异位词 就是用的字母一样但组成的单词不一样 map处理，数组</p></li><li><p>两个数组的交集： 不能重复元素！</p></li></ol>',5),s=[o];function r(n,_,p,c,d,h){return e(),i("div",null,s)}const f=a(t,[["render",r]]);export{u as __pageData,f as default};
