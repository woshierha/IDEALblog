import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.36c93c4c.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/代码随想录/数组.md","filePath":"pages/Earnings/代码随想录/数组.md"}'),p={name:"pages/Earnings/代码随想录/数组.md"},o=l(`<h3 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h3><p>59 209 977 3</p><h3 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h3><p>数组是存放在连续内存空间上的相同类型数据的集合。</p><p>数组可以方便的通过下标索引的方式获取到下标下对应的数据。 正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。 删除的话复杂度o(n) 查找 o(1)</p><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ol><li>二分法 难:如何找左右边界</li></ol><blockquote><p>左闭右闭 l = 0; r=nums.length-1; [left,right] while(l&lt;=r){ right=mid-1 left=mid+1 } 左闭右开</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[left,right)</span></span>
<span class="line"><span style="color:#E1E4E8;">left</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">right</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">nums.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">while</span><span style="color:#E1E4E8;">(l</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">r){</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">mid</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FFAB70;">target</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//右开，所以这个右边界是不包含的</span></span>
<span class="line"><span style="color:#E1E4E8;">   right</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mid;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }else </span><span style="color:#B392F0;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">mid</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">taget</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">     left</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mid</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[left,right)</span></span>
<span class="line"><span style="color:#24292E;">left</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">right</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">nums.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">while</span><span style="color:#24292E;">(l</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">r){</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">if</span><span style="color:#24292E;">(</span><span style="color:#E36209;">mid</span><span style="color:#24292E;">&gt;</span><span style="color:#E36209;">target</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//右开，所以这个右边界是不包含的</span></span>
<span class="line"><span style="color:#24292E;">   right</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mid;</span></span>
<span class="line"><span style="color:#24292E;"> }else </span><span style="color:#6F42C1;">if</span><span style="color:#24292E;">(</span><span style="color:#E36209;">mid</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">taget</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">     left</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mid</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//查找左边界</span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(l</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">r){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mid</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">left</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">((right</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">left)</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(arr[mid]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">taget){</span></span>
<span class="line"><span style="color:#E1E4E8;">     l</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mid</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(arr[mid]</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">target){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(arr[mid]！</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">arr[mid</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;">mid</span><span style="color:#F97583;">==</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> mid </span><span style="color:#6A737D;">//那么就找到了左边界</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">           l</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mid</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       r</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mid</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//查找左边界</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(l</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">r){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mid</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">left</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">((right</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">left)</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(arr[mid]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">taget){</span></span>
<span class="line"><span style="color:#24292E;">     l</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mid</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(arr[mid]</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">target){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(arr[mid]！</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">arr[mid</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">||</span><span style="color:#24292E;">mid</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mid </span><span style="color:#6A737D;">//那么就找到了左边界</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">           l</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mid</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">     }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">       r</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mid</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="双指针法" tabindex="-1">双指针法 <a class="header-anchor" href="#双指针法" aria-label="Permalink to &quot;双指针法&quot;">​</a></h2><p>难：慢指针什么时候该移动，该移动到哪里</p><h2 id="滑动窗口" tabindex="-1">滑动窗口： <a class="header-anchor" href="#滑动窗口" aria-label="Permalink to &quot;滑动窗口：&quot;">​</a></h2><p>难：注意滑动的限制条件 不能滑到左边界之前去了</p><blockquote><p>(map.get(s[r])) &gt;=l</p></blockquote><h2 id="模拟-难-注意各个边界的限制条件" tabindex="-1">模拟 难：注意各个边界的限制条件 <a class="header-anchor" href="#模拟-难-注意各个边界的限制条件" aria-label="Permalink to &quot;模拟 难：注意各个边界的限制条件&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">generateMatrix</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> upbounder</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//上边界</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> leftbounder</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#6A737D;">//左边界</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> rightbounder</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#6A737D;">//右边界</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;">  lowbounder</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#6A737D;">//下边界</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> res</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">(n).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">n;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">         res[i]</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">(n).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> j</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(j</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">n){ </span><span style="color:#6A737D;">//数字要小于输入的平方</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//从上到下 对每一排来说</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(upbounder</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">lowbounder){ </span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">//从左到右 依次填充数字</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">leftbounder;i</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">rightbounder;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">             res[upbounder][i]</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j</span></span>
<span class="line"><span style="color:#E1E4E8;">             j</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         upbounder</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//从右到左 对每一列来说</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(leftbounder</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">rightbounder){</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">//从上到下依次填充数字</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">upbounder;i</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">lowbounder;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">             res[i][rightbounder]</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j</span></span>
<span class="line"><span style="color:#E1E4E8;">             j</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         rightbounder</span><span style="color:#F97583;">--</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//从下到上，每一排</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(upbounder</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">lowbounder){</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">//从右到左 填充数字进去</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rightbounder;i</span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;">leftbounder;i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">           res[lowbounder][i]</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j</span></span>
<span class="line"><span style="color:#E1E4E8;">          j</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         lowbounder</span><span style="color:#F97583;">--</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//从左到右，每一列</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(leftbounder</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">rightbounder){</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">//从下到下，填充数字</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">lowbounder;i</span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;">upbounder;i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            res[i][leftbounder]</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j</span></span>
<span class="line"><span style="color:#E1E4E8;">             j</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">        leftbounder</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#B392F0;">generateMatrix</span><span style="color:#E1E4E8;">(n)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">n</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">generateMatrix</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">n</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> upbounder</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//上边界</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> leftbounder</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#6A737D;">//左边界</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> rightbounder</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#6A737D;">//右边界</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">let</span><span style="color:#24292E;">  lowbounder</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#6A737D;">//下边界</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(n).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">n;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">         res[i]</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(n).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> j</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(j</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">n){ </span><span style="color:#6A737D;">//数字要小于输入的平方</span></span>
<span class="line"><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//从上到下 对每一排来说</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(upbounder</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">lowbounder){ </span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">//从左到右 依次填充数字</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">leftbounder;i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">rightbounder;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">             res[upbounder][i]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j</span></span>
<span class="line"><span style="color:#24292E;">             j</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         upbounder</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">//从右到左 对每一列来说</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(leftbounder</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">rightbounder){</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">//从上到下依次填充数字</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">upbounder;i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">lowbounder;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">             res[i][rightbounder]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j</span></span>
<span class="line"><span style="color:#24292E;">             j</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         rightbounder</span><span style="color:#D73A49;">--</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">//从下到上，每一排</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(upbounder</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">lowbounder){</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">//从右到左 填充数字进去</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightbounder;i</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">leftbounder;i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">           res[lowbounder][i]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j</span></span>
<span class="line"><span style="color:#24292E;">          j</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         lowbounder</span><span style="color:#D73A49;">--</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">//从左到右，每一列</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(leftbounder</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">rightbounder){</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">//从下到下，填充数字</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lowbounder;i</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">upbounder;i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            res[i][leftbounder]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j</span></span>
<span class="line"><span style="color:#24292E;">             j</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">        leftbounder</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6F42C1;">generateMatrix</span><span style="color:#24292E;">(n)</span></span></code></pre></div>`,18),e=[o];function c(t,r,E,y,i,F){return n(),a("div",null,e)}const D=s(p,[["render",c]]);export{A as __pageData,D as default};
