import{_ as e,o as a,c as i,Q as l}from"./chunks/framework.39f71bcb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/工程化/webpack.md","filePath":"pages/Earnings/工程化/webpack.md"}'),t={name:"pages/Earnings/工程化/webpack.md"},o=l('<h2 id="webpack注释" tabindex="-1">webpack注释 <a class="header-anchor" href="#webpack注释" aria-label="Permalink to &quot;webpack注释&quot;">​</a></h2><ul><li><code>/* webpackChunkName: &quot;externalUserManage&quot; */</code> 为对应的chunk块命名</li><li>TreeShaking: DCE（Dead Code Elelimiation） <ul><li>代码不会被执行 不可到达</li><li>代码执行的结果不会被用到</li><li>代码只会影响死变量（只写不读）</li></ul></li><li>ES6 模块化的特性</li></ul><ol><li>只能作为模块顶层语句出现</li><li>import的模块名只能是字符串常量</li><li>import binding 是 immutable的</li><li>依赖关系是确定的，和运行时的状态无关，可以进行可靠的静态分析（不执行代码，从字面量上对代码进行分析），然后进行清除。</li><li>[uglify]不能坐垮文件的DCE 所以不能优化上述情况</li></ol><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>[性能优化] 1. 优化构建速度：缩小搜索范围 ｜ 动态连结库 ｜ happypack 2. 优化使用体验：自动刷新 3. 优化输出质量：区分环境｜ 压缩代码 ｜ CDN加速 ｜ tree shaking ｜ 分块打包 提取公共代码｜ 提升代码流畅度 prepack</p>',5),n=[o];function r(c,s,p,_,d,h){return a(),i("div",null,n)}const m=e(t,[["render",r]]);export{u as __pageData,m as default};
