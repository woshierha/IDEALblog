import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.464c1bfb.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/手写/发布订阅模式/发布订阅模式.md","filePath":"pages/Earnings/手写/发布订阅模式/发布订阅模式.md"}'),p={name:"pages/Earnings/手写/发布订阅模式/发布订阅模式.md"},o=l(`<h4 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h4><ol><li>监听到某个行为就触发对应的回调</li><li>发布者:发布消息的功能 订阅者：可以订阅和取消订阅</li><li>其中发送者（称为发布者）不会直接将消息发送给特定的接收者（称为订阅者）。相反，发布者将消息分发给多个订阅者，让订阅者自己去处理消息。订阅者可以订阅多个事件，发布者也可以发布多个事件。当一个事件发生时，所有订阅者都会接收到通知，并执行与该事件相关的操作。</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">subscribe</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;subscriber&#39;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">name;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">publihser</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//要订阅的发布者</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//订阅的消息</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">handler</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//要处理的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    }){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//订阅消息的回调</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(publihser </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> )</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">subscribe</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;subscriber&#39;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">name;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">publihser</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//要订阅的发布者</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">message</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//订阅的消息</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">handler</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//要处理的方法</span></span>
<span class="line"><span style="color:#24292E;">    }){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//订阅消息的回调</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(publihser </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> )</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="3"><li>在发布订阅模式中，event代表一个事件的名称，可以是任何字符串。listener是一个函数，它会在这个事件被触发时执行。当事件被发布时，所有注册到该事件的listener都将被调用。</li></ol>`,4),e=[o];function c(t,r,E,y,i,F){return n(),a("div",null,e)}const h=s(p,[["render",c]]);export{_ as __pageData,h as default};
