import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.f16e6129.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/深入理解ES6/TDZ.md","filePath":"pages/Earnings/深入理解ES6/TDZ.md"}'),p={name:"pages/Earnings/深入理解ES6/TDZ.md"},o=l(`<h3 id="let-const" tabindex="-1">let const <a class="header-anchor" href="#let-const" aria-label="Permalink to &quot;let const&quot;">​</a></h3><p>TDZ 在声明之前访问就会报错 const 会阻止对于变量绑定与自身值的修改，但是对他声明对象的成员修改是可以的。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;jack&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;tom&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//报错</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">person</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">     name:</span><span style="color:#9ECBFF;">&#39;jack&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;"> person.name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;tom&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//可以</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;jack&#39;</span></span>
<span class="line"><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;tom&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//报错</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">     name:</span><span style="color:#032F62;">&#39;jack&#39;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;"> person.name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;tom&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//可以</span></span></code></pre></div><h3 id="var" tabindex="-1">var <a class="header-anchor" href="#var" aria-label="Permalink to &quot;var&quot;">​</a></h3><p>var创建的变量可能会覆盖window上的变量</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(window.reg) </span><span style="color:#6A737D;">//hello!</span></span>
<span class="line"><span style="color:#6A737D;">//使用let 更安全</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;">  reg</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(window.reg</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">reg) </span><span style="color:#6A737D;">//false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(window.reg) </span><span style="color:#6A737D;">//hello!</span></span>
<span class="line"><span style="color:#6A737D;">//使用let 更安全</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;">  reg</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(window.reg</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">reg) </span><span style="color:#6A737D;">//false</span></span></code></pre></div>`,6),e=[o];function c(t,r,y,E,i,d){return a(),n("div",null,e)}const g=s(p,[["render",c]]);export{h as __pageData,g as default};
