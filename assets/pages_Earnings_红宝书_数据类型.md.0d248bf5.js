import{_ as a,o as e,c as o,Q as l}from"./chunks/framework.36c93c4c.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/红宝书/数据类型.md","filePath":"pages/Earnings/红宝书/数据类型.md"}'),s={name:"pages/Earnings/红宝书/数据类型.md"},t=l('<h2 id="判断数组" tabindex="-1">判断数组 <a class="header-anchor" href="#判断数组" aria-label="Permalink to &quot;判断数组&quot;">​</a></h2><ol><li>instance of</li><li>Array.isArray()</li><li></li></ol><h2 id="等于和不等于" tabindex="-1">等于和不等于 <a class="header-anchor" href="#等于和不等于" aria-label="Permalink to &quot;等于和不等于&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">b</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">b</span></span></code></pre></div><ol><li>操作数是布尔值，转换为数值，false -&gt; 0</li><li>如果一个操作数是字符串，另一个是数值，都转换为数值在比较</li><li>如果一个是对象一个不是，调用valueof()获取其原始值在比较</li><li>null == undefined 不能在转换为其他值</li><li>如果a 或者b 有一个是NaN，则相等操作符返回false，不相等返回true，<strong>就算都是NaN也返回false</strong></li></ol><p>== 要转换 ===不转换</p><h3 id="都转换成数值类型比较" tabindex="-1">都转换成数值类型比较 <a class="header-anchor" href="#都转换成数值类型比较" aria-label="Permalink to &quot;都转换成数值类型比较&quot;">​</a></h3><p>// console.log(123n===123) // console.log(Number(123n)); // let a={} //所有的对象转换为Number都是NaN // if({}==false){console.log(&#39;1&#39;)}else {console.log(&#39;2&#39;)} // console.log(Object.prototype.valueOf.apply(a)) // console.log(Object.prototype.toString.apply(a))</p><h3 id="布尔值转换" tabindex="-1">布尔值转换 <a class="header-anchor" href="#布尔值转换" aria-label="Permalink to &quot;布尔值转换&quot;">​</a></h3><p>// if({})console.log(&#39;{&#39;) ; // else console.log(&#39;}&#39;); // if([]) console.log(&#39;true&#39;)</p><h2 id="数组类型判断" tabindex="-1">数组类型判断 <a class="header-anchor" href="#数组类型判断" aria-label="Permalink to &quot;数组类型判断&quot;">​</a></h2><p>let arr=[1,2,3] console.log(Object.prototype.toString.call(arr)===&#39;[object Array]&#39;); console.log(arr.constructor.toString===&#39;[Function: Array]&#39;);</p>',12),n=[t];function r(i,c,p,d,h,g){return e(),o("div",null,n)}const f=a(s,[["render",r]]);export{u as __pageData,f as default};
