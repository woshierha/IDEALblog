import{_ as a,o as t,c as s,Q as l}from"./chunks/framework.f16e6129.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/红宝书/网络请求.md","filePath":"pages/Earnings/红宝书/网络请求.md"}'),e={name:"pages/Earnings/红宝书/网络请求.md"},n=l(`<h2 id="章节-网络请求" tabindex="-1">章节：网络请求 <a class="header-anchor" href="#章节-网络请求" aria-label="Permalink to &quot;章节：网络请求&quot;">​</a></h2><h3 id="动机-了解网络请求和使用方法" tabindex="-1">动机：了解网络请求和使用方法 <a class="header-anchor" href="#动机-了解网络请求和使用方法" aria-label="Permalink to &quot;动机：了解网络请求和使用方法&quot;">​</a></h3><h3 id="要点" tabindex="-1">要点： <a class="header-anchor" href="#要点" aria-label="Permalink to &quot;要点：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Content</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">Type的值不属于下列之一</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">application</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">x</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">www</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">urlencoded</span></span>
<span class="line"><span style="color:#E1E4E8;">multipart</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">form</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">data</span></span>
<span class="line"><span style="color:#E1E4E8;">text</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">plain</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Content</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">Type的值不属于下列之一</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">application</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">x</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">www</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">urlencoded</span></span>
<span class="line"><span style="color:#24292E;">multipart</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">form</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">data</span></span>
<span class="line"><span style="color:#24292E;">text</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">plain</span></span></code></pre></div><ul><li>是复杂请求</li></ul><ol><li>ajax 基于XMLhttprequest实现 跨域安全策略限制</li><li>fetch 提供重定向拦截，修改请求功能</li><li>websocket</li><li>axios 和fetch 不同其中最大的不同之处在于传递数据的方式不同，Axios是放到data属性里，以对象的方式进行传递，而Fetch则是需要放在body属性中，以字符串的方式进行传递。</li><li>axios拦截器，可以实现为请求附加token，统一对请求处理，以及错误提示等操作</li><li>fetch自行封装，axios已经封装好了</li></ol><h3 id="启发点" tabindex="-1">启发点： <a class="header-anchor" href="#启发点" aria-label="Permalink to &quot;启发点：&quot;">​</a></h3><h3 id="总结" tabindex="-1">总结： <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结：&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td style="text-align:left;">get查询字符串 需要encodeURIComponent编码，name1=value&amp;name2=vlaue2 需要以&amp;分割</td><td>POST在请求体携带数据 通过content-Type设置提交的内容类型 表单是 application/x-www-formulated</td><td>发送同样资源,get比POST快两倍</td><td>CORS使用自定义的http头部允许浏览器和服务器相互连接，确定请求成功与否</td></tr><tr><td style="text-align:left;">JSONP 调用是通过动态创建&lt;script&gt;元素并为 src 属性指定跨域 URL 实现的。 不知道请求是否失败</td><td>必须异步，.text()返回一个契约，status和statusText检查请求是否成功</td><td>即通信只能在相同域名、相同端口和相同协议</td><td>Web Socket 是与服务器的全双工、双向通信渠道，发送更小的数据块。</td></tr><tr><td style="text-align:left;">fetch提供拦截，重定向和修改接口，浏览器原生支持的</td><td></td><td></td><td></td></tr><tr><td style="text-align:left;"></td><td></td><td></td><td></td></tr></tbody></table>`,9),o=[n];function p(r,c,i,d,h,y){return t(),s("div",null,o)}const _=a(e,[["render",p]]);export{u as __pageData,_ as default};
