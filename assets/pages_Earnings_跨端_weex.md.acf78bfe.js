import{_ as e,o as a,c as t,Q as s}from"./chunks/framework.39f71bcb.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Earnings/跨端/weex.md","filePath":"pages/Earnings/跨端/weex.md"}'),i={name:"pages/Earnings/跨端/weex.md"},o=s('<h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h2><p>(htmljs/css) -&gt; 虚拟DOM -&gt; brige -&gt; 用不同的引擎渲染到原生</p><p>虚拟DOM 在数据和真实DOM之间，每次数据变化通过 diff算法与之前的虚拟DOM对比，然后再patch到真实DOM上。 动态化部署</p><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>用lightinghouse查看性能</p><ol><li>DOM节点数和层及深度，试图拍平</li><li>虚拟DOM的diff算法</li><li>js异步计算布局,serviceworker将耗时的任务放到异步进行,通过console.time() console.timeEnd()</li></ol>',6),r=[o];function n(l,c,_,d,p,h){return a(),t("div",null,r)}const g=e(i,[["render",n]]);export{m as __pageData,g as default};
